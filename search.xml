<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo-常用命令]]></title>
    <url>%2F2019%2F04%2F12%2Fhexo-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;记录一下hexo经常使用的命令，发现自己好久没有hexo，命令都不记得了。 新建文章1hexo new &quot;postname&quot; (hexo n postname) 新建页面1hexo new page &quot;pagename&quot; 启动本地web服务12hexo server (hexo s)本地网址：localhost:4000 生成静态文件1hexo generate (hexo g) 生成部署1hexo d -g 生成预览1hexo s -g 清理public文件夹1hexo clean]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ffmpeg_avfilter的使用详解]]></title>
    <url>%2F2019%2F03%2F27%2Fffmpeg-avfilter%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;在ffmpeg，我们对视音频进行一些处理，如添加水印，有个很方便的库，avfilter， 过滤的过程解码后的画面 -&gt; buffer过滤器 -&gt; 其他过滤器 -&gt; buffersink 过滤器 -&gt; 处理好的画面]]></content>
      <categories>
        <category>ffmpeg</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
        <tag>avfilter</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown语言的总结]]></title>
    <url>%2F2019%2F03%2F18%2Fmarkdown%E8%AF%AD%E8%A8%80%E7%9A%84%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[s3-关于s3cmd的下载]]></title>
    <url>%2F2019%2F03%2F18%2Fs3-%E5%85%B3%E4%BA%8Es3cmd%E7%9A%84%E4%B8%8B%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;很多人都用过对象存储，比如亚马逊的s3平台，我想大家都比较熟悉，今天来介绍一款工具，用来在centos7平台上方便的操作对象存储的东西，比如查看自己的桶，创建桶等。 s3cmd的下载第一步下载get-pip.py wget https://bootstrap.pypa.io/get-pip.py 第二步安装get-pip.py python get-pip.py 第三步安装s3cmd pip install s3cmd 第四步设置.s3cfg 设置三个比较主要的]]></content>
      <categories>
        <category>s3对象存储</category>
      </categories>
      <tags>
        <tag>s3</tag>
        <tag>centos7</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[others-时间管理]]></title>
    <url>%2F2019%2F03%2F15%2Fothers-%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[目标设定是第一步，提供路线图 你的目标是什么？短期内。你希望达成什么样的愿望？长期来说。你希望你的人生是什么样子？]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[cpp-关于内存泄漏的问题]]></title>
    <url>%2F2019%2F03%2F15%2Fcpp-%E5%85%B3%E4%BA%8E%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[今天我们讨论一些怎么处理内存泄漏的问题]]></content>
      <categories>
        <category>cpp</category>
      </categories>
      <tags>
        <tag>cpp</tag>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git-常用的命令]]></title>
    <url>%2F2019%2F03%2F15%2Fgit-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;记录一些git常用的命令，便于在长时间不用时能够有个地方查阅，下面的几个是经常用到的。在windows下使用git，许多朋友都说无法使用一些状态（修改，保存，提交）图标，是因为图标显示不是git本身的功能呢，我们需要下载TortoiseGit才能使用图标。 重命名文件夹1git mv -f oldfolder newfolder 删除中间的某次提交1git revert commit id 版本回退12git reset --hard commitid这个不会保留之前的记录 撤销本地提交123git reset --soft commitidgit reset --mixed commitid两者的区别，--soft会将改动放在缓存区 --mixed不会讲改动放在缓存区 撤销远程的提交123git loggit reset --hard commitidgit push origin HEAD:master --force 强制提交1git push -u origin master -f 将某个分支的提交copy到另一个分支上1234例如，有两个分支，a,b,想要将a的某次提交，copy到b分支上1,在a分支上 git log 查询commitid2,git checkout b 切换分支3,git cherry-pick commitid 统计当前分支的提交数目1git rev-list HEAD | wc -l 将当前工作区的修改暂存起来123456git stash 冻结当前的分支修改git stash save &quot;说明信息&quot;git stash list 列出所有的工作现场存储git stash apply stash@&#123;n&#125; 恢复某个工作现场git stash drop stash@&#123;n&#125; 删除存储的某个工作现场git stash pop stash@&#123;n&#125; 恢复的同时把stash内容也删除了]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos7-控制系统的CPU]]></title>
    <url>%2F2019%2F03%2F15%2Fcentos7-%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F%E7%9A%84CPU%2F</url>
    <content type="text"><![CDATA[这里是linux的学习基地，我们可以学习一些linux的常用知识]]></content>
      <categories>
        <category>centos7</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ffmpeg 1,源码的编译和安装]]></title>
    <url>%2F2019%2F03%2F15%2Fffmpeg-1-%E6%BA%90%E7%A0%81%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[这里是ffmpeg学习的笔记，欢迎大家来一起参与讨论]]></content>
      <categories>
        <category>ffmpeg</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F03%2F08%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
