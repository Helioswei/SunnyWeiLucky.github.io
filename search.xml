<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[相机底片的解析]]></title>
    <url>%2F2019%2F04%2F16%2F%E7%9B%B8%E6%9C%BA%E5%BA%95%E7%89%87%E7%9A%84%E8%A7%A3%E6%9E%90%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;公司要求对相机原生格式如后缀为dng,CR2等的图片进行转码，然后预览，自己查找了一下资料，目前仅仅是用命令行来进行处理的，因为我们是linux端的服务，所以直接封装命令行比较的简单。 DNG数据格式的介绍12http://www.cnblogs.com/adong7639/p/4446828.htmlhttps://blog.csdn.net/wgx571859177/article/details/80755793?utm_source=blogxgwz1 DNG格式基本的概念12345 DNG格式是在TIFF的基础上扩展出来的，要了解DNG，需要清楚TIFF,TIFF/EP,DNG,RAW之间的关系。 DNG（Digital Negative）是Adobe开发的一种开发的raw image file format ,主要是为了统一不同厂商的raw格式。里面使用的tag基本上都定义在TIFF或者TIFF/EP 中，在DNG Sepcification中只是定义或者建议了数据的组织方式，颜色空间的转换等等。 TIFF/EP12345678TIFF是一个灵活适应性强的文件格式。通过在文件标头中使用&quot;标签&quot;，它能够在一个文件中处理多幅图像和数据。标签能够标明图像的如图像大小这样的基本几何尺寸，或者定义图像数据是如何排列的，或者是否使用了各种各样的图像压缩选项。TIFF/EP的全称是&quot;Tag Image File Format / Electronic Photography&quot;。 它是一个名为&quot;Electronic still-picture imaging – Removable memory – Part 2: TIFF/EP image data format&quot;ISO标准， 标准号为ISO12234-2。TIFF/EP对TIFF文件扩展部分标记属性。 RAW12345678910111213RAW文件包含创建一个可视图像所必须的相机传感器数据信息。RAW文件的结构，包括ISO标准的RAW图像格式ISO 12234-2 ，TIFF / EP，往往遵循一个共同的模式，那就是：一个短的文件头，它通常包含文件的字节顺序，文件标识符和主数据的文件偏移量摄像传感器元数据，用来描述图像传感器的数据，包括传感器的尺寸， 颜色滤波矩阵(color filter array)的属性和它的颜色配置文件列入任何CMS环境或数据库中需要的图像元数据。这些措施包括曝光设定，相机/扫描仪/镜头模型，拍摄/扫描日期（和可选的位置信息），创作信息和其他。一些原始文件包含可交换图像格式的标准化元数据节；图像缩略图；可选的JPEG格式缩小尺寸的图像，可用于快速预览；在电影胶片扫描中，无论是文件序列的时间码，序列码或帧编号都代表在扫描卷轴中的帧顺序。这个项目允许文件被被按帧顺序排列（不依赖于它的文件名​）；传感器图像数据； 常见的RAW格式1234许多RAW格式, 包括 3FR (Hasselblad), DCR, K25, KDC (Kodak), IIQ (Phase One), CR2 (Canon), ERF (Epson), MEF (Mamiya), MOS (Leaf), NEF (Nikon), ORF (Olympus), PEF (Pentax), RW2 (Panasonic) and ARW, SRF, SR2 (Sony), 都是基于TIFF格式。 这些文件可能在许多方面偏离TIFF标准，包括使用一个非标准的文件头，列入额外的图像标记和一些标签的数据加密。 TIFF, TIFF/EP, DNG, RAW之间的关系1234567TIFF和DNG同为Specification，分别定义了后缀名为.tif/.tiff和.dng的文件格式同时在TIFF Specification也定义个baseline及部分扩展的tag。TIFF/EP则定义并规范了在电子影像中所使用的TAG。DNG同时与TIFF和TIFF/EP兼容，并包含了EXIF和XMP信息。DNG实际上就是扩张的TIFF， 把DNG的扩展名改成TIF就可以直接预览图片。在DNG出现以前，各个数码相机制造商都有自己的格式，比如Canon(cr2/crw), Nikon(nef), Olympus(orf), Pentex(pef)等等。之所以出现这么多格式，一方面的原因是在这之前没有统一的raw格式， 但更重要的是，各个厂商希望用这个只对自己公开的数据格式来保护自己的私密信息。Adobe推出DNG希望能一统raw的天下。 处理不同格式RAW或者DNG底片的方法&nbsp;&nbsp;&nbsp;&nbsp;为了能够得到RAW格式或者DNG格式的jpg图片供我们预览，可以使用DCRAW和ffmpeg来结合使用 dcraw介绍1https://blog.csdn.net/bi_diu1368/article/details/80411304 123451,dcraw 下载 yum install dcraw2.1,如果相机底片有缩略图，则直接可以通过 dcraw -e test.dng 获得其缩略图（注意，缩略图也有不存在的时候）2.2,如果没有缩略图，则可以先将RAW格式的转化为ppm dcraw -v test.dng 获取其ppm的图片；然后在通过ffmpeg可以将 ppm格式的图片转码jpg ffmpeg -i test.ppm out.jpg]]></content>
      <categories>
        <category>图片处理</category>
      </categories>
      <tags>
        <tag>image</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-常用命令]]></title>
    <url>%2F2019%2F04%2F12%2Fhexo-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;记录一下hexo经常使用的命令，发现自己好久没有hexo，命令都不记得了。 新建文章1hexo new &quot;postname&quot; (hexo n postname) 新建页面1hexo new page &quot;pagename&quot; 启动本地web服务12hexo server (hexo s)本地网址：localhost:4000 生成静态文件1hexo generate (hexo g) 生成部署1hexo d -g 生成预览1hexo s -g 清理public文件夹1hexo clean]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ffmpeg_avfilter的使用详解]]></title>
    <url>%2F2019%2F03%2F27%2Fffmpeg-avfilter%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;在ffmpeg，我们对视音频进行一些处理，如添加水印，有个很方便的库，avfilter， 过滤的过程解码后的画面 -&gt; buffer过滤器 -&gt; 其他过滤器 -&gt; buffersink 过滤器 -&gt; 处理好的画面]]></content>
      <categories>
        <category>ffmpeg</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
        <tag>avfilter</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown语言的总结]]></title>
    <url>%2F2019%2F03%2F18%2Fmarkdown%E8%AF%AD%E8%A8%80%E7%9A%84%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[s3-关于s3cmd的下载]]></title>
    <url>%2F2019%2F03%2F18%2Fs3-%E5%85%B3%E4%BA%8Es3cmd%E7%9A%84%E4%B8%8B%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;很多人都用过对象存储，比如亚马逊的s3平台，我想大家都比较熟悉，今天来介绍一款工具，用来在centos7平台上方便的操作对象存储的东西，比如查看自己的桶，创建桶等。 s3cmd的下载第一步下载get-pip.py wget https://bootstrap.pypa.io/get-pip.py 第二步安装get-pip.py python get-pip.py 第三步安装s3cmd pip install s3cmd 第四步设置.s3cfg 设置三个比较主要的]]></content>
      <categories>
        <category>s3对象存储</category>
      </categories>
      <tags>
        <tag>s3</tag>
        <tag>centos7</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[others-时间管理]]></title>
    <url>%2F2019%2F03%2F15%2Fothers-%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[目标设定是第一步，提供路线图 你的目标是什么？短期内。你希望达成什么样的愿望？长期来说。你希望你的人生是什么样子？]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[cpp-关于内存泄漏的问题]]></title>
    <url>%2F2019%2F03%2F15%2Fcpp-%E5%85%B3%E4%BA%8E%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[今天我们讨论一些怎么处理内存泄漏的问题]]></content>
      <categories>
        <category>cpp</category>
      </categories>
      <tags>
        <tag>cpp</tag>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git-常用的命令]]></title>
    <url>%2F2019%2F03%2F15%2Fgit-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;记录一些git常用的命令，便于在长时间不用时能够有个地方查阅，下面的几个是经常用到的。在windows下使用git，许多朋友都说无法使用一些状态（修改，保存，提交）图标，是因为图标显示不是git本身的功能呢，我们需要下载TortoiseGit才能使用图标。 重命名文件夹1git mv -f oldfolder newfolder 删除中间的某次提交1git revert commit id 版本回退12git reset --hard commitid这个不会保留之前的记录 撤销本地提交123git reset --soft commitidgit reset --mixed commitid两者的区别，--soft会将改动放在缓存区 --mixed不会讲改动放在缓存区 撤销远程的提交123git loggit reset --hard commitidgit push origin HEAD:master --force 强制提交1git push -u origin master -f 将某个分支的提交copy到另一个分支上1234例如，有两个分支，a,b,想要将a的某次提交，copy到b分支上1,在a分支上 git log 查询commitid2,git checkout b 切换分支3,git cherry-pick commitid 统计当前分支的提交数目1git rev-list HEAD | wc -l 将当前工作区的修改暂存起来123456git stash 冻结当前的分支修改git stash save &quot;说明信息&quot;git stash list 列出所有的工作现场存储git stash apply stash@&#123;n&#125; 恢复某个工作现场git stash drop stash@&#123;n&#125; 删除存储的某个工作现场git stash pop stash@&#123;n&#125; 恢复的同时把stash内容也删除了]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos7-控制系统的CPU]]></title>
    <url>%2F2019%2F03%2F15%2Fcentos7-%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F%E7%9A%84CPU%2F</url>
    <content type="text"><![CDATA[这里是linux的学习基地，我们可以学习一些linux的常用知识]]></content>
      <categories>
        <category>centos7</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ffmpeg 1,源码的编译和安装]]></title>
    <url>%2F2019%2F03%2F15%2Fffmpeg-1-%E6%BA%90%E7%A0%81%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[这里是ffmpeg学习的笔记，欢迎大家来一起参与讨论]]></content>
      <categories>
        <category>ffmpeg</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F03%2F08%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
