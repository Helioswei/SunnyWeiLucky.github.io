<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Helios</title>
  
  <subtitle>喜爱古风的码农小哥哥</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.helioswei.top/"/>
  <updated>2020-07-27T09:54:38.683Z</updated>
  <id>http://www.helioswei.top/</id>
  
  <author>
    <name>Helioswei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>rabbitmq-AMQPCPP的编译</title>
    <link href="http://www.helioswei.top/article/3142310907.html"/>
    <id>http://www.helioswei.top/article/3142310907.html</id>
    <published>2020-07-27T09:01:57.000Z</published>
    <updated>2020-07-27T09:54:38.683Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/CopernicaMarketingSoftware/AMQP-CPP.git</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd AMQP-CPP</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmake -DAMQP-CPP_BUILD_SHARED=true -DAMQP-CPP_LINUX_TCP=true -DCMAKE_INSTALL_PREFIX=/usr/local/amqpcpp ..</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="rabbitmq" scheme="http://www.helioswei.top/categories/rabbitmq/"/>
    
    
      <category term="rabbitmq" scheme="http://www.helioswei.top/tags/rabbitmq/"/>
    
      <category term="amqpcpp" scheme="http://www.helioswei.top/tags/amqpcpp/"/>
    
  </entry>
  
  <entry>
    <title>spider-centos7安装selenium模拟浏览器请求</title>
    <link href="http://www.helioswei.top/article/933612194.html"/>
    <id>http://www.helioswei.top/article/933612194.html</id>
    <published>2020-07-22T01:32:16.000Z</published>
    <updated>2020-07-28T08:10:11.884Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装selenium"><a href="#安装selenium" class="headerlink" title="安装selenium"></a>安装selenium</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><h3 id="安装chrome浏览器"><a href="#安装chrome浏览器" class="headerlink" title="安装chrome浏览器"></a>安装chrome浏览器</h3><h5 id="1，配置yum源"><a href="#1，配置yum源" class="headerlink" title="1，配置yum源"></a>1，配置yum源</h5><p>在目录/etc/yum.repos.d/ 下新建文件 google-chrome.repo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum.repos.d/</span><br><span class="line">vim google-chrome.repo</span><br></pre></td></tr></table></figure><p>写入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[google-chrome]</span><br><span class="line">name=google-chrome</span><br><span class="line">baseurl=http://dl.google.com/linux/chrome/rpm/stable/$basearch</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub</span><br></pre></td></tr></table></figure><p>安装google chrome浏览器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install google-chrome-stable</span><br></pre></td></tr></table></figure><p>google官方源可能在中国无法使用，导致安装失败或者在国内无法更新，可以添加以下参数来安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install google-chrome-stable --nogpgcheck</span><br></pre></td></tr></table></figure><h5 id="运行chrome"><a href="#运行chrome" class="headerlink" title="运行chrome"></a>运行chrome</h5><p>找到chrome路径，并做个软连接，方便使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">which google-chrome-stable</span><br><span class="line">ln -s xxx /bin/chrome</span><br></pre></td></tr></table></figure><p>使用root用户启动chrome示例时会提示添加参数–no-sandbox flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chrome --no-sandbox flag</span><br></pre></td></tr></table></figure><h3 id="安装chromedriver"><a href="#安装chromedriver" class="headerlink" title="安装chromedriver"></a>安装chromedriver</h3><p>查看google-chrome的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google-chrome --version</span><br></pre></td></tr></table></figure><p>chromedriver版本支持的Chrome版本</p><p><a href="https://sites.google.com/a/chromium.org/chromedriver/downloads" target="_blank" rel="noopener">chromeDriver官网</a>官网一般比较慢</p><p><a href="http://npm.taobao.org/mirrors/chromedriver/" target="_blank" rel="noopener">淘宝镜像</a></p><p>移动chromedriver到/usr/bin</p><h3 id="selenium-python验证"><a href="#selenium-python验证" class="headerlink" title="selenium+python验证"></a>selenium+python验证</h3><p>运行一段test.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver                                                                                                       </span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"> </span><br><span class="line">chrome_options = Options()</span><br><span class="line">chrome_options.add_argument(<span class="string">"--headless"</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">'--disable-gpu'</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">'--no-sandbox'</span>)    <span class="comment"># 禁止沙箱模式，否则肯能会报错遇到chrome异常</span></span><br><span class="line">url=<span class="string">"https://www.west.cn/login.asp"</span></span><br><span class="line">brower=webdriver.Chrome(executable_path=<span class="string">"/usr/bin/chromedriver"</span>, chrome_options=chrome_options)</span><br><span class="line">brower.get(url)</span><br><span class="line">print(brower.current_url)</span><br><span class="line">brower.get(<span class="string">"https://www.west.cn/Manager/"</span>)</span><br><span class="line">print(brower.current_url)</span><br><span class="line">brower.quit()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3.6 test.py</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.west.cn/login.asp</span><br><span class="line">https://www.west.cn/login.asp?pageStr=/Manager/Default.asp</span><br></pre></td></tr></table></figure><h3 id="使用pyautogui"><a href="#使用pyautogui" class="headerlink" title="使用pyautogui"></a>使用pyautogui</h3><p>对于一些元素虽然页面可以点击，但是获取的元素无法点击，我们可以使用pyautogui来模拟鼠标的点击更加的方便</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyautogui</span><br></pre></td></tr></table></figure><h3 id="远程调用"><a href="#远程调用" class="headerlink" title="远程调用"></a>远程调用</h3><p>使用selenium-server-standalone进行远程调用，<a href="https://www.xiehai.win/java/2019/05/24/selenium-server-standalone.html" target="_blank" rel="noopener">详解可以看这篇连接</a></p><p><a href="http://selenium-release.storage.googleapis.com/index.html" target="_blank" rel="noopener">selenium-server-standalone下载</a></p><h5 id="jar8环境的安装"><a href="#jar8环境的安装" class="headerlink" title="jar8环境的安装"></a>jar8环境的安装</h5><p><a href="https://www.yaosansi.com/post/install-java-jdk-on-centos/" target="_blank" rel="noopener">jar环境的安装</a></p><h5 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h5><p>参数配置方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动hub</span><br><span class="line">java -jar selenium-server-standalone-3.141.59.jar -role hub -maxSession 10 -port 4444</span><br><span class="line"># 启动node</span><br><span class="line">java -jar  -&quot;Dwebdriver.chrome.driver=C:\\tools\\driver\\chromedriver.exe&quot; selenium-server-standalone-3.141.59.jar -role node  -hub http://localhost:4444/grid/register -port 4445</span><br></pre></td></tr></table></figure><p>配置文件方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动hub</span><br><span class="line">java -jar selenium-server-standalone-3.141.59.jar -role hub -hubConfig hub.json</span><br><span class="line"># 启动node</span><br><span class="line">java -jar selenium-server-standalone-3.141.59.jar -role node -hub http://localhost:4444/grid/register -nodeConfig node.json</span><br></pre></td></tr></table></figure><p><code>hub.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"port"</span>: <span class="number">4444</span>,</span><br><span class="line">  <span class="attr">"newSessionWaitTimeout"</span>: <span class="number">-1</span>,</span><br><span class="line">  <span class="attr">"servlets"</span>: [],</span><br><span class="line">  <span class="attr">"capabilityMatcher"</span>: <span class="string">"org.openqa.grid.internal.utils.DefaultCapabilityMatcher"</span>,</span><br><span class="line">  <span class="attr">"throwOnCapabilityNotPresent"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"nodePolling"</span>: <span class="number">5000</span>,</span><br><span class="line">  <span class="attr">"cleanUpCycle"</span>: <span class="number">5000</span>,</span><br><span class="line">  <span class="attr">"timeout"</span>: <span class="number">60</span>,</span><br><span class="line">  <span class="attr">"browserTimeout"</span>: <span class="number">60</span>,</span><br><span class="line">  <span class="attr">"maxSession"</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">"jettyMaxThreads"</span>: <span class="number">-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>node.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;capabilities&quot;: [</span><br><span class="line">&#123;</span><br><span class="line">  &quot;browserName&quot;: &quot;firefox&quot;,</span><br><span class="line">  &quot;marionette&quot;: true,</span><br><span class="line">  &quot;maxInstances&quot;: 1,</span><br><span class="line">  &quot;seleniumProtocol&quot;: &quot;WebDriver&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  &quot;browserName&quot;: &quot;chrome&quot;,</span><br><span class="line">  &quot;maxInstances&quot;: 3,</span><br><span class="line">  &quot;platform&quot;: &quot;WINDOWS&quot;,</span><br><span class="line">  &quot;webdriver.chrome.driver&quot;: &quot;D:\\javaproject\\oATFWeb\\External\\chromedriver2.4.1.exe&quot;,</span><br><span class="line">  &quot;seleniumProtocol&quot;: &quot;WebDriver&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  &quot;browserName&quot;: &quot;internet explorer&quot;,</span><br><span class="line">  &quot;platform&quot;: &quot;WINDOWS&quot;,</span><br><span class="line">  &quot;maxInstances&quot;: 1,</span><br><span class="line">  &quot;seleniumProtocol&quot;: &quot;WebDriver&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  &quot;browserName&quot;: &quot;safari&quot;,</span><br><span class="line">  &quot;technologyPreview&quot;: false,</span><br><span class="line">  &quot;platform&quot;: &quot;MAC&quot;,</span><br><span class="line">  &quot;maxInstances&quot;: 1,</span><br><span class="line">  &quot;seleniumProtocol&quot;: &quot;WebDriver&quot;</span><br><span class="line">&#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;proxy&quot;: &quot;org.openqa.grid.selenium.proxy.DefaultRemoteProxy&quot;,</span><br><span class="line">  &quot;maxSession&quot;: 5,</span><br><span class="line">  &quot;port&quot;: 5555,</span><br><span class="line">  &quot;register&quot;: true,</span><br><span class="line">  &quot;registerCycle&quot;: 5000,</span><br><span class="line">  &quot;hub&quot;: &quot;http://10.12.1.140:4444&quot;,</span><br><span class="line">  &quot;nodeStatusCheckTimeout&quot;: 5000,</span><br><span class="line">  &quot;nodePolling&quot;: 5000,</span><br><span class="line">  &quot;role&quot;: &quot;node&quot;,</span><br><span class="line">  &quot;unregisterIfStillDownAfter&quot;: 60000,</span><br><span class="line">  &quot;downPollingLimit&quot;: 2,</span><br><span class="line">  &quot;debug&quot;: false,</span><br><span class="line">  &quot;servlets&quot;: [],</span><br><span class="line">  &quot;withoutServlets&quot;: [],</span><br><span class="line">  &quot;custom&quot;: &#123;&#125;,</span><br><span class="line">  &quot;browserTimeout&quot;: 60,</span><br><span class="line">  &quot;timeout&quot;: 60</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>访问http://hub.ip:port/grid/console可以看到node的详细配置</code></p><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.remote.webdriver <span class="keyword">import</span> WebDriver <span class="keyword">as</span> RemoteWebDriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">chrome_options = Options()</span><br><span class="line"> </span><br><span class="line">proxy=<span class="string">'58.254.220.116:53579'</span></span><br><span class="line"><span class="comment">#chrome_options.add_experimental_option('excludeSwitches', ['enable-automation'])</span></span><br><span class="line"><span class="comment">#chrome_options.add_argument("--proxy-server=http://" + proxy)</span></span><br><span class="line">chrome_options.add_argument(<span class="string">"start-maximized"</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">"enable-automation"</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">"--headless"</span>)</span><br><span class="line"><span class="comment">#chrome_options.add_argument("blink-settings=imagesEnabled=false")</span></span><br><span class="line">chrome_options.add_argument(<span class="string">'--disable-gpu'</span>)</span><br><span class="line"><span class="comment">#chrome_options.add_argument("--dns-prefetch-disable")</span></span><br><span class="line"><span class="comment">#chrome_options.add_argument("--no-proxy-server")</span></span><br><span class="line">chrome_options.add_argument(<span class="string">'--no-sandbox'</span>)    <span class="comment"># 禁止沙箱模式，否则肯能会报错遇到chrome异常</span></span><br><span class="line"><span class="comment">#url="https://www.365365918.com/#/AC/B1/C1/D8/E91032124/F3/I1/"</span></span><br><span class="line"><span class="comment">#url="https://www.365365918.com/"</span></span><br><span class="line">url=<span class="string">"https://www.betvictor68.mobi/"</span></span><br><span class="line"><span class="comment">#url="https://blog.csdn.net/tiantiantdx/article/details/79434550?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-8.edu_weight&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-8.edu_weight"</span></span><br><span class="line"><span class="comment">#url="https://juejin.im/entry/5b2ca6316fb9a00e7747561a"</span></span><br><span class="line"><span class="comment">#url="https://stackoverflow.com/questions/48450594/selenium-timed-out-receiving-message-from-renderer"</span></span><br><span class="line"><span class="comment">#url="https://zhuanlan.zhihu.com/p/111859925"</span></span><br><span class="line"><span class="comment">#打开google浏览器</span></span><br><span class="line"><span class="comment">#brower=webdriver.Chrome(executable_path="/usr/bin/chromedriver", chrome_options=chrome_options)</span></span><br><span class="line">brower=RemoteWebDriver(command_executor=<span class="string">"http://192.168.50.74:4444/wd/hub"</span>, desired_capabilities=chrome_options.to_capabilities())</span><br><span class="line"><span class="comment">#访问地址</span></span><br><span class="line">brower.get(url)</span><br><span class="line"><span class="comment">#设置请求的时间，等待js执行完毕</span></span><br><span class="line"><span class="comment">#time.sleep(5)</span></span><br><span class="line">brower.implicitly_wait(<span class="number">30</span>);</span><br><span class="line">pageSource=brower.find_element_by_xpath(<span class="string">"//*"</span>).get_attribute(<span class="string">"outerHTML"</span>)</span><br><span class="line"><span class="comment">#pageSource=brower.execute_script("return document.documentElement.outerHTML")</span></span><br><span class="line">fo = open(<span class="string">"/root/bet365.html"</span>, <span class="string">"w"</span>)</span><br><span class="line">fo.write(pageSource)</span><br><span class="line">fo.close()</span><br><span class="line"><span class="comment">#print(pageSource)</span></span><br><span class="line"><span class="comment">#退出Google浏览器</span></span><br><span class="line">brower.quit()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装selenium&quot;&gt;&lt;a href=&quot;#安装selenium&quot; class=&quot;headerlink&quot; title=&quot;安装selenium&quot;&gt;&lt;/a&gt;安装selenium&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
      <category term="spider" scheme="http://www.helioswei.top/categories/spider/"/>
    
    
      <category term="spider" scheme="http://www.helioswei.top/tags/spider/"/>
    
      <category term="selenium" scheme="http://www.helioswei.top/tags/selenium/"/>
    
  </entry>
  
  <entry>
    <title>s3-libs3源码编译</title>
    <link href="http://www.helioswei.top/article/3714481837.html"/>
    <id>http://www.helioswei.top/article/3714481837.html</id>
    <published>2020-07-14T10:06:16.000Z</published>
    <updated>2020-07-22T09:09:32.739Z</updated>
    
    <content type="html"><![CDATA[<h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install libxml2-devel</span><br><span class="line"></span><br><span class="line">yum install libxml2</span><br><span class="line"></span><br><span class="line">yum install libcurl-devel</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">cd build/lib</span><br></pre></td></tr></table></figure><p><code>有两个文件libs3.so.4</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;依赖&quot;&gt;&lt;a href=&quot;#依赖&quot; class=&quot;headerlink&quot; title=&quot;依赖&quot;&gt;&lt;/a&gt;依赖&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="s3" scheme="http://www.helioswei.top/categories/s3/"/>
    
    
      <category term="s3" scheme="http://www.helioswei.top/tags/s3/"/>
    
      <category term="libs3" scheme="http://www.helioswei.top/tags/libs3/"/>
    
  </entry>
  
  <entry>
    <title>cpp-devtoolset切换gcc的版本</title>
    <link href="http://www.helioswei.top/article/2538200340.html"/>
    <id>http://www.helioswei.top/article/2538200340.html</id>
    <published>2020-06-19T08:47:14.000Z</published>
    <updated>2020-06-23T03:16:54.417Z</updated>
    
    <content type="html"><![CDATA[<p>我们在编译cpp的时候，有时候需要支持c++11/14的一些特性，就需要升级gcc的版本，为了简单的升级，Red Hat提供了scl软件集来为用户提供一种以方便、安全地安装和使用应用程序和运行时环境的多个（而且可能是更新的）版本的方式，同时避免把系统搞乱。下载devtoolset</p><p>使用scl升级gcc的步骤</p><h3 id="一，安装scl源"><a href="#一，安装scl源" class="headerlink" title="一，安装scl源"></a>一，安装scl源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install centos-release-scl scl-utils-build</span><br></pre></td></tr></table></figure><h3 id="二，列出scl有哪些可用的源"><a href="#二，列出scl有哪些可用的源" class="headerlink" title="二，列出scl有哪些可用的源"></a>二，列出scl有哪些可用的源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list all --enablerepo=&apos;centos-sclo-rh&apos; | grep devtoolset</span><br></pre></td></tr></table></figure><h3 id="三，安装gcc，g"><a href="#三，安装gcc，g" class="headerlink" title="三，安装gcc，g++"></a>三，安装gcc，g++</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install devtoolset-7-gcc devtoolset-7-gcc-c++</span><br></pre></td></tr></table></figure><h3 id="四，切换版本"><a href="#四，切换版本" class="headerlink" title="四，切换版本"></a>四，切换版本</h3><p>这个版本的切换仅对当前的环境有用</p><h5 id="启动环境"><a href="#启动环境" class="headerlink" title="启动环境"></a>启动环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scl enable devtoolset-7 bash</span><br><span class="line">gcc -v</span><br></pre></td></tr></table></figure><h5 id="退出环境"><a href="#退出环境" class="headerlink" title="退出环境"></a>退出环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我们在编译cpp的时候，有时候需要支持c++11/14的一些特性，就需要升级gcc的版本，为了简单的升级，Red Hat提供了scl软件集来为用户提供一种以方便、安全地安装和使用应用程序和运行时环境的多个（而且可能是更新的）版本的方式，同时避免把系统搞乱。下载devtool
      
    
    </summary>
    
      <category term="cpp" scheme="http://www.helioswei.top/categories/cpp/"/>
    
    
      <category term="cpp" scheme="http://www.helioswei.top/tags/cpp/"/>
    
      <category term="gcc" scheme="http://www.helioswei.top/tags/gcc/"/>
    
      <category term="devtoolset" scheme="http://www.helioswei.top/tags/devtoolset/"/>
    
  </entry>
  
  <entry>
    <title>cpp-pistache源码编译之实现cpp restful接口</title>
    <link href="http://www.helioswei.top/article/2728951675.html"/>
    <id>http://www.helioswei.top/article/2728951675.html</id>
    <published>2020-06-19T07:07:56.000Z</published>
    <updated>2020-06-23T03:15:57.443Z</updated>
    
    <content type="html"><![CDATA[<p>cpp实现restful类型的接口比较的复杂，我们使用pistache库来解决这个问题，经对比，这个库是速度最快的。</p><h3 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/oktal/pistache.git</span><br></pre></td></tr></table></figure><h3 id="第三方库更新"><a href="#第三方库更新" class="headerlink" title="第三方库更新"></a>第三方库更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update --init</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><h5 id="依赖下载gcc升级"><a href="#依赖下载gcc升级" class="headerlink" title="依赖下载gcc升级"></a>依赖下载gcc升级</h5><p><a href="http://www.helioswei.top/article/2230395924.html">gcc5.1.0源码编译</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc version &gt;5.1.0 #我们需要支持c++14</span><br></pre></td></tr></table></figure><p>我们虽然重新编译安装了gcc，但系统有多个gcc的环境，我们在使用的时候可能还是默认的调用gcc4.8的低级版本，为了解决这个问题，我们可以显示的设置调用，我们需要设置编译器的环境变量，将5.1.0的编译器命令行设置到环境变量中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export CC=/usr/local/bin/gcc</span><br><span class="line">export CXX=/usr/local/bin/g++</span><br></pre></td></tr></table></figure><h5 id="cmake升级"><a href="#cmake升级" class="headerlink" title="cmake升级"></a>cmake升级</h5><p><a href="https://cmake.org/download/" target="_blank" rel="noopener">cmake下载</a>，选择最新的下载即可，然后执行安装三部曲</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake version &gt; 3.18.0</span><br></pre></td></tr></table></figure><h5 id="curl-devel下载"><a href="#curl-devel下载" class="headerlink" title="curl-devel下载"></a>curl-devel下载</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel -y</span><br></pre></td></tr></table></figure><h5 id="编译-1"><a href="#编译-1" class="headerlink" title="编译"></a>编译</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd pistache</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmake -G &quot;Unix Makefiles&quot; -DCMAKE_BUILD_TYPE=Release -DPISTACHE_BUILD_EXAMPLES=true -DPISTACHE_BUILD_TESTS=true -DPISTACHE_BUILD_DOCS=false -DPISTACHE_USE_SSL=true -DCMAKE_INSTALL_PREFIX=/usr/local/pistache ..</span><br><span class="line">make -j 4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><code>注意，这个在使用的时候需要选择c++的标准,设置</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -std=c++14 #一般常用的是c++11</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;cpp实现restful类型的接口比较的复杂，我们使用pistache库来解决这个问题，经对比，这个库是速度最快的。&lt;/p&gt;
&lt;h3 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h3
      
    
    </summary>
    
      <category term="cpp" scheme="http://www.helioswei.top/categories/cpp/"/>
    
    
      <category term="cpp" scheme="http://www.helioswei.top/tags/cpp/"/>
    
      <category term="restful" scheme="http://www.helioswei.top/tags/restful/"/>
    
  </entry>
  
  <entry>
    <title>cpp-centos7常用环境变量的设置</title>
    <link href="http://www.helioswei.top/article/1768093973.html"/>
    <id>http://www.helioswei.top/article/1768093973.html</id>
    <published>2020-06-19T03:56:16.000Z</published>
    <updated>2020-06-19T07:08:04.003Z</updated>
    
    <content type="html"><![CDATA[<p>我们在centos7开发的cpp的时候，在编译的时候需要设置一些常有的环境变量，如头文件的路径，动态库的路径</p><h3 id="设置c语言的头文件的搜索路径"><a href="#设置c语言的头文件的搜索路径" class="headerlink" title="设置c语言的头文件的搜索路径"></a>设置c语言的头文件的搜索路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export C_INCLUDE_PATH =</span><br></pre></td></tr></table></figure><h3 id="设置c语言的链接库的搜索路径"><a href="#设置c语言的链接库的搜索路径" class="headerlink" title="设置c语言的链接库的搜索路径"></a>设置c语言的链接库的搜索路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LIBRARY_PATH =</span><br></pre></td></tr></table></figure><h3 id="设置cpp的头文件的搜索路径"><a href="#设置cpp的头文件的搜索路径" class="headerlink" title="设置cpp的头文件的搜索路径"></a>设置cpp的头文件的搜索路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CPLUS_INCLUDE_PATH =</span><br></pre></td></tr></table></figure><h3 id="设置cpp的链接库的搜索路径"><a href="#设置cpp的链接库的搜索路径" class="headerlink" title="设置cpp的链接库的搜索路径"></a>设置cpp的链接库的搜索路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LD_LIBRARY_PATH =</span><br></pre></td></tr></table></figure><h3 id="对于GCC版本的选择"><a href="#对于GCC版本的选择" class="headerlink" title="对于GCC版本的选择"></a>对于GCC版本的选择</h3><p>我们在用cmake编译源码的时候，有时候需要gcc不同的版本，以支持c++11的特性</p><p><code>gcc4.8.5以下不支持`</code>gcc5.1.0支持c++11`,我们在编译的时候可以显示的设置编译器的选择,下面是我自己编译的gcc5.1.0版本，这样在编译的时候就会调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export CC=/usr/local/bin/gcc</span><br><span class="line">export CXX=/usr/local/bin/g++</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我们在centos7开发的cpp的时候，在编译的时候需要设置一些常有的环境变量，如头文件的路径，动态库的路径&lt;/p&gt;
&lt;h3 id=&quot;设置c语言的头文件的搜索路径&quot;&gt;&lt;a href=&quot;#设置c语言的头文件的搜索路径&quot; class=&quot;headerlink&quot; title=&quot;设置
      
    
    </summary>
    
      <category term="cpp" scheme="http://www.helioswei.top/categories/cpp/"/>
    
    
      <category term="cpp" scheme="http://www.helioswei.top/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>json-cpp处理json</title>
    <link href="http://www.helioswei.top/article/3190039070.html"/>
    <id>http://www.helioswei.top/article/3190039070.html</id>
    <published>2020-06-16T03:27:54.000Z</published>
    <updated>2020-06-16T03:44:42.648Z</updated>
    
    <content type="html"><![CDATA[<p>cpp处理json常用的库</p><h3 id="poco-json"><a href="#poco-json" class="headerlink" title="poco-json"></a>poco-json</h3><p>poco库中处理json的模块，将其转换为json字符串时键名会按照字母的顺序排列</p><h3 id="jsoncpp"><a href="#jsoncpp" class="headerlink" title="jsoncpp"></a>jsoncpp</h3><p>jsoncpp这个库，将其转换为json字符串时键名也会按照字母的顺序排序</p><h4 id="1，下载"><a href="#1，下载" class="headerlink" title="1，下载"></a>1，下载</h4><p><a href="https://sourceforge.net/projects/jsoncpp/" target="_blank" rel="noopener">jsonspp下载</a></p><h4 id="2，安装"><a href="#2，安装" class="headerlink" title="2，安装"></a>2，安装</h4><h5 id="scons下载"><a href="#scons下载" class="headerlink" title="scons下载"></a>scons下载</h5><p>使用scons来安装，如果yum没有找到，则需要<a href="http://www.helioswei.top/article/3859923575.html">更新yum库</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install scons -y</span><br></pre></td></tr></table></figure><h5 id="编译jsoncpp"><a href="#编译jsoncpp" class="headerlink" title="编译jsoncpp"></a>编译jsoncpp</h5><p>编译好的链接库，存放在jsoncpp源目录下的libs中<code>libjson_linux-gcc-4.8.5_libmt.so</code>，头文件放在include目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd jsoncpp的源目录</span><br><span class="line"></span><br><span class="line">scons platform=linux-gcc</span><br></pre></td></tr></table></figure><h3 id="protobuf"><a href="#protobuf" class="headerlink" title="protobuf"></a>protobuf</h3><p>序列化，这个将其转换为json字符串时会按照message的顺序，比较的好。</p><h4 id="1，使用步骤"><a href="#1，使用步骤" class="headerlink" title="1，使用步骤"></a>1，使用步骤</h4><h5 id="先写proto的文件-status-proto"><a href="#先写proto的文件-status-proto" class="headerlink" title="先写proto的文件 status.proto"></a>先写proto的文件 status.proto</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">syntax = &quot;proto3&quot;;                                                                                                                    </span><br><span class="line">package biyi;</span><br><span class="line"> </span><br><span class="line">message UnifiedLog&#123;</span><br><span class="line">    Cont content = 1;</span><br><span class="line">    string sign = 2;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">message Cont&#123;</span><br><span class="line">    string time_iso8601 = 1;</span><br><span class="line">    string companyId = 2;</span><br><span class="line">    string company = 3;</span><br><span class="line">    string projectNameCN = 4;</span><br><span class="line">    string projectName = 5;</span><br><span class="line">    string componentName = 6;</span><br><span class="line">    string componentMethodName = 7;</span><br><span class="line">    string componentType = 8;</span><br><span class="line">    string componentVer = 9;</span><br><span class="line">    string componentLang = 10; </span><br><span class="line">    string userName = 11; </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="cpp调用"><a href="#cpp调用" class="headerlink" title="cpp调用"></a>cpp调用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &quot;../build/proto/status.pb.h&quot;</span><br><span class="line">#include &lt;google/protobuf/util/json_util.h&gt;</span><br><span class="line"> </span><br><span class="line">namespace proto = google::protobuf::util;</span><br><span class="line"> </span><br><span class="line">using namespace biyi;</span><br><span class="line">using namespace std;</span><br><span class="line"> </span><br><span class="line">int main() &#123;</span><br><span class="line">    UnifiedLog uniLog;</span><br><span class="line">    uniLog.set_sign(</span><br><span class="line">        &quot;68f3ea8baebbaddc5a47d6d955ecf53892edb4d3d8a3afe08cf4518204d30af5&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_time_iso8601(&quot;2020-03-09T11:11:14+08:00&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_companyid(&quot;000&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_company(&quot;ctsi&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_projectnamecn(&quot;001&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_projectname(&quot;biyi&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_componentname(&quot;micro-service-statics&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_componentmethodname(&quot;DemoBean.echo&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_componenttype(&quot;微服务组件&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_componentver(&quot;v1.0.0&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_componentlang(&quot;java&quot;);</span><br><span class="line">    uniLog.mutable_content()-&gt;set_username(&quot;admin&quot;);</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; uniLog.sign() &lt;&lt; endl;</span><br><span class="line">    // message to json string</span><br><span class="line">    string str;</span><br><span class="line">    proto::Status status = proto::MessageToJsonString(uniLog, &amp;str);</span><br><span class="line">    if (!status.ok()) &#123;</span><br><span class="line">        cout &lt;&lt; status.ToString() &lt;&lt; endl;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        cout &lt;&lt; &quot;str: &quot; &lt;&lt; str &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;cpp处理json常用的库&lt;/p&gt;
&lt;h3 id=&quot;poco-json&quot;&gt;&lt;a href=&quot;#poco-json&quot; class=&quot;headerlink&quot; title=&quot;poco-json&quot;&gt;&lt;/a&gt;poco-json&lt;/h3&gt;&lt;p&gt;poco库中处理json的模块，将其转换为
      
    
    </summary>
    
      <category term="cpp" scheme="http://www.helioswei.top/categories/cpp/"/>
    
    
      <category term="cpp" scheme="http://www.helioswei.top/tags/cpp/"/>
    
      <category term="json" scheme="http://www.helioswei.top/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>centos7-网络设置</title>
    <link href="http://www.helioswei.top/article/3594159119.html"/>
    <id>http://www.helioswei.top/article/3594159119.html</id>
    <published>2020-06-09T06:19:49.000Z</published>
    <updated>2020-06-09T06:26:49.843Z</updated>
    
    <content type="html"><![CDATA[<p>配置centos7的网络，让其可以正常的连接网络</p><h3 id="一，打开网络配置所在的文件"><a href="#一，打开网络配置所在的文件" class="headerlink" title="一，打开网络配置所在的文件"></a>一，打开网络配置所在的文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/sysconfig/network-scripts</span><br><span class="line">vi ifcfg-ens160 (不同的系统，文件名不同)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">#设置静态ip还是动态IP</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens160</span><br><span class="line">UUID=750fb5d2-4bff-437d-ab4e-75eaf038429d</span><br><span class="line">DEVICE=ens160</span><br><span class="line">#开机自启动</span><br><span class="line">ONBOOT=yes</span><br><span class="line">#静态ip地址</span><br><span class="line">IPADDR=192.168.50.72</span><br><span class="line">#静态网关</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">#路由</span><br><span class="line">GATEWAY=192.168.50.1</span><br></pre></td></tr></table></figure><p>设置好之后，重启网络服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h3 id="二，配置域名解析"><a href="#二，配置域名解析" class="headerlink" title="二，配置域名解析"></a>二，配置域名解析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/resolv.conf</span><br></pre></td></tr></table></figure><p>添加内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nameserver   8.8.8.8</span><br><span class="line"></span><br><span class="line">nameserver   8.8.4.4</span><br><span class="line"></span><br><span class="line">nameserver    114.114.114.114</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;配置centos7的网络，让其可以正常的连接网络&lt;/p&gt;
&lt;h3 id=&quot;一，打开网络配置所在的文件&quot;&gt;&lt;a href=&quot;#一，打开网络配置所在的文件&quot; class=&quot;headerlink&quot; title=&quot;一，打开网络配置所在的文件&quot;&gt;&lt;/a&gt;一，打开网络配置所在的文件&lt;/
      
    
    </summary>
    
      <category term="centos7" scheme="http://www.helioswei.top/categories/centos7/"/>
    
    
      <category term="centos7" scheme="http://www.helioswei.top/tags/centos7/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.helioswei.top/article/1243066710.html"/>
    <id>http://www.helioswei.top/article/1243066710.html</id>
    <published>2020-06-09T03:52:17.377Z</published>
    <updated>2020-06-09T03:52:17.377Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>github-解决GitHub clone慢的问题</title>
    <link href="http://www.helioswei.top/article/814027255.html"/>
    <id>http://www.helioswei.top/article/814027255.html</id>
    <published>2020-06-01T07:23:20.000Z</published>
    <updated>2020-06-09T04:00:42.650Z</updated>
    
    <content type="html"><![CDATA[<p>哎，有时候自己在GitHub上下载东西的时候总是很慢，这里记载一下几个加快的方法</p><h3 id="一，使用gitee码云来进行clone"><a href="#一，使用gitee码云来进行clone" class="headerlink" title="一，使用gitee码云来进行clone"></a>一，使用gitee码云来进行clone</h3><p>将需要clone的项目，先转移到码云上，然后通过码云来下载本地，速度很快；</p><h3 id="二，修改hosts"><a href="#二，修改hosts" class="headerlink" title="二，修改hosts"></a>二，修改hosts</h3><p>通过<a href="https://www.ipaddress.com/" target="_blank" rel="noopener">查询IP地址网站</a>查询下面两个域名的IP地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">github.com</span><br></pre></td></tr></table></figure><h5 id="在linux上-vim-etc-hosts"><a href="#在linux上-vim-etc-hosts" class="headerlink" title="在linux上  vim /etc/hosts"></a>在linux上  vim /etc/hosts</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br><span class="line">140.82.113.3 github.com</span><br></pre></td></tr></table></figure><h5 id="在Windows上-修改-C-Windows-System32-drivers-etc-hosts"><a href="#在Windows上-修改-C-Windows-System32-drivers-etc-hosts" class="headerlink" title="在Windows上 修改 C:\Windows\System32\drivers\etc\hosts"></a>在Windows上 修改 C:\Windows\System32\drivers\etc\hosts</h5><ol><li><p>对于Windows下的hosts执行需要权限，我们可以将其先拷贝到桌面，修改后再copy回去</p></li><li><p>打开cmd命令行，执行下面的命令</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig/flushdns</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;哎，有时候自己在GitHub上下载东西的时候总是很慢，这里记载一下几个加快的方法&lt;/p&gt;
&lt;h3 id=&quot;一，使用gitee码云来进行clone&quot;&gt;&lt;a href=&quot;#一，使用gitee码云来进行clone&quot; class=&quot;headerlink&quot; title=&quot;一，使用gi
      
    
    </summary>
    
      <category term="github" scheme="http://www.helioswei.top/categories/github/"/>
    
      <category term="git" scheme="http://www.helioswei.top/categories/github/git/"/>
    
    
      <category term="git" scheme="http://www.helioswei.top/tags/git/"/>
    
      <category term="github" scheme="http://www.helioswei.top/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>mysql-mysql常用命令</title>
    <link href="http://www.helioswei.top/article/4107582643.html"/>
    <id>http://www.helioswei.top/article/4107582643.html</id>
    <published>2020-05-28T06:33:43.000Z</published>
    <updated>2020-06-09T03:52:17.379Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下常用的mysql数据库的命令</p><h3 id="数据库导入"><a href="#数据库导入" class="headerlink" title="数据库导入"></a>数据库导入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -phelios2020 &lt;/opt/vidFactory/database/sql/initDatatbase.sql</span><br></pre></td></tr></table></figure><h3 id="数据库导出"><a href="#数据库导出" class="headerlink" title="数据库导出"></a>数据库导出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p 数据库名 &gt; initDatatbase.sql</span><br></pre></td></tr></table></figure><h3 id="database"><a href="#database" class="headerlink" title="database"></a>database</h3><h5 id="展示数据库"><a href="#展示数据库" class="headerlink" title="展示数据库"></a>展示数据库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><h5 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use vidfactory;</span><br></pre></td></tr></table></figure><h3 id="table"><a href="#table" class="headerlink" title="table"></a>table</h3><h5 id="展示表"><a href="#展示表" class="headerlink" title="展示表"></a>展示表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><h5 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h5><h6 id="插入所有字段"><a href="#插入所有字段" class="headerlink" title="插入所有字段"></a>插入所有字段</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inset into tableName values(值1，值2，值3....)</span><br></pre></td></tr></table></figure><h6 id="插入某些字段"><a href="#插入某些字段" class="headerlink" title="插入某些字段"></a>插入某些字段</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inset into tableName(列名a,列名b,列名c) values(值1，值2，值3);</span><br></pre></td></tr></table></figure><h5 id="查看某个表的结构"><a href="#查看某个表的结构" class="headerlink" title="查看某个表的结构"></a>查看某个表的结构</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc tableName \G;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录一下常用的mysql数据库的命令&lt;/p&gt;
&lt;h3 id=&quot;数据库导入&quot;&gt;&lt;a href=&quot;#数据库导入&quot; class=&quot;headerlink&quot; title=&quot;数据库导入&quot;&gt;&lt;/a&gt;数据库导入&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;ta
      
    
    </summary>
    
      <category term="mysql" scheme="http://www.helioswei.top/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://www.helioswei.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>docker-docker常用命令</title>
    <link href="http://www.helioswei.top/article/2019996800.html"/>
    <id>http://www.helioswei.top/article/2019996800.html</id>
    <published>2020-05-25T08:50:55.000Z</published>
    <updated>2020-06-09T03:52:17.376Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下自己在工作中常用的docker命令</p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><p>验证是否可以正常运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><h5 id="镜像构建通过dockfile"><a href="#镜像构建通过dockfile" class="headerlink" title="镜像构建通过dockfile"></a>镜像构建通过dockfile</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t datatom/video-worker:v4.2.0 -f Dockerfile .</span><br></pre></td></tr></table></figure><h5 id="镜像打包"><a href="#镜像打包" class="headerlink" title="镜像打包"></a>镜像打包</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o video-worker.v4.2.0.tar datatom/video-worker:v4.2.0</span><br></pre></td></tr></table></figure><h5 id="镜像导入"><a href="#镜像导入" class="headerlink" title="镜像导入"></a>镜像导入</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load -i video-worker.v4.2.0.tar</span><br></pre></td></tr></table></figure><h5 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="/images/docker/docker.png" alt="docker.png"></p><h5 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi IMAGEID</span><br></pre></td></tr></table></figure><p>如果当前镜像正在被容器使用，则需要先删除容器，可以使用如下命令删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -a | grep IMAGEID|awk &apos;&#123;print $1&#125;&apos;) -f</span><br><span class="line">docker rmi IMAGEID</span><br></pre></td></tr></table></figure><h5 id="删除none镜像"><a href="#删除none镜像" class="headerlink" title="删除none镜像"></a>删除none镜像</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images | grep &apos;&lt;none&gt;&apos;|awk &apos;&#123;print $3&#125;&apos;) -f</span><br></pre></td></tr></table></figure><h5 id="镜像运行"><a href="#镜像运行" class="headerlink" title="镜像运行"></a>镜像运行</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it e2cbe0447a2b /bin/bash</span><br></pre></td></tr></table></figure><p>镜像运行时添加环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -e MEDIA_REDIS_IP=127.0.0.1 -e MEDIA_REDIS_PORT=5555  -it d3796bd153f8 /bin/bash</span><br></pre></td></tr></table></figure><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><h5 id="查看正在运行的容器"><a href="#查看正在运行的容器" class="headerlink" title="查看正在运行的容器"></a>查看正在运行的容器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h5 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop CONTAINERID</span><br></pre></td></tr></table></figure><h5 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm CONTAINERID</span><br></pre></td></tr></table></figure><h5 id="强制删除"><a href="#强制删除" class="headerlink" title="强制删除"></a>强制删除</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm CONTAINERID -f</span><br></pre></td></tr></table></figure><h3 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h3><h5 id="修改镜像的tagid"><a href="#修改镜像的tagid" class="headerlink" title="修改镜像的tagid"></a>修改镜像的tagid</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker  tag   f92b7e4509da  datatom/image-worker:v4.1.1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录一下自己在工作中常用的docker命令&lt;/p&gt;
&lt;h5 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
      <category term="docker" scheme="http://www.helioswei.top/categories/docker/"/>
    
    
      <category term="docker" scheme="http://www.helioswei.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>hexo-代码块添加复制功能</title>
    <link href="http://www.helioswei.top/article/853195356.html"/>
    <id>http://www.helioswei.top/article/853195356.html</id>
    <published>2020-05-25T02:58:19.000Z</published>
    <updated>2020-06-09T03:52:17.378Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一，添加copy-code-swig"><a href="#一，添加copy-code-swig" class="headerlink" title="一，添加copy-code.swig"></a>一，添加copy-code.swig</h3><p>在博客根目录下，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd themes/next/layout/_third-party/</span><br></pre></td></tr></table></figure><p>然后在次文件夹下创建copy-code.swig的文件，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.codeblock.copy_button.enable %&#125;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    .copy-btn &#123;</span><br><span class="line">      display: inline-block;</span><br><span class="line">      padding: 6px 12px;</span><br><span class="line">      font-size: 13px;</span><br><span class="line">      font-weight: 700;</span><br><span class="line">      line-height: 20px;</span><br><span class="line">      color: #333;</span><br><span class="line">      white-space: nowrap;</span><br><span class="line">      vertical-align: middle;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">      background-color: #eee;</span><br><span class="line">      background-image: linear-gradient(#fcfcfc, #eee);</span><br><span class="line">      border: 1px solid #d5d5d5;</span><br><span class="line">      border-radius: 3px;</span><br><span class="line">      user-select: none;</span><br><span class="line">      outline: 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .highlight-wrap .copy-btn &#123;</span><br><span class="line">      transition: opacity .3s ease-in-out;</span><br><span class="line">      opacity: 0;</span><br><span class="line">      padding: 2px 6px;</span><br><span class="line">      position: absolute;</span><br><span class="line">      right: 4px;</span><br><span class="line">      top: 8px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .highlight-wrap:hover .copy-btn,</span><br><span class="line">    .highlight-wrap .copy-btn:focus &#123;</span><br><span class="line">      opacity: 1</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .highlight-wrap &#123;</span><br><span class="line">      position: relative;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    $(&apos;.highlight&apos;).each(function (i, e) &#123;</span><br><span class="line">      var $wrap = $(&apos;&lt;div&gt;&apos;).addClass(&apos;highlight-wrap&apos;)</span><br><span class="line">      $(e).after($wrap)</span><br><span class="line">      $wrap.append($(&apos;&lt;button&gt;&apos;).addClass(&apos;copy-btn&apos;).append(&apos;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&apos;).on(&apos;click&apos;, function (e) &#123;</span><br><span class="line">        var code = $(this).parent().find(&apos;.code&apos;).find(&apos;.line&apos;).map(function (i, e) &#123;</span><br><span class="line">          return $(e).text()</span><br><span class="line">        &#125;).toArray().join(&apos;\n&apos;)</span><br><span class="line">        var ta = document.createElement(&apos;textarea&apos;)</span><br><span class="line">        document.body.appendChild(ta)</span><br><span class="line">        ta.style.position = &apos;absolute&apos;</span><br><span class="line">        ta.style.top = &apos;0px&apos;</span><br><span class="line">        ta.style.left = &apos;0px&apos;</span><br><span class="line">        ta.value = code</span><br><span class="line">        ta.select()</span><br><span class="line">        ta.focus()</span><br><span class="line">        var result = document.execCommand(&apos;copy&apos;)</span><br><span class="line">        document.body.removeChild(ta)</span><br><span class="line">        &#123;% if theme.codeblock.copy_button.show_result %&#125;</span><br><span class="line">          if(result)$(this).text(&apos;&#123;&#123;__(&quot;post.copy_success&quot;)&#125;&#125;&apos;)</span><br><span class="line">          else $(this).text(&apos;&#123;&#123;__(&quot;post.copy_failure&quot;)&#125;&#125;&apos;)</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">        $(this).blur()</span><br><span class="line">      &#125;)).on(&apos;mouseleave&apos;, function (e) &#123;</span><br><span class="line">        var $b = $(this).find(&apos;.copy-btn&apos;)</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          $b.text(&apos;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&apos;)</span><br><span class="line">        &#125;, 300)</span><br><span class="line">      &#125;).append(e)</span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>然后返回上一层目录，即<code>layout</code>文件夹下，编辑_layout.swig,如下图</p><p><img src="/images/codecopy.png" alt="codecopy.png"></p><p>在图中位置添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;_third-party/copy-code.swig&apos; %&#125;</span><br></pre></td></tr></table></figure><p><a href="https://qiming.info/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8A%A0%E5%85%A5%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">参考这位作者的文章</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一，添加copy-code-swig&quot;&gt;&lt;a href=&quot;#一，添加copy-code-swig&quot; class=&quot;headerlink&quot; title=&quot;一，添加copy-code.swig&quot;&gt;&lt;/a&gt;一，添加copy-code.swig&lt;/h3&gt;&lt;p&gt;在博客根目录
      
    
    </summary>
    
      <category term="hexo" scheme="http://www.helioswei.top/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.helioswei.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo-gulp压缩</title>
    <link href="http://www.helioswei.top/article/2127593710.html"/>
    <id>http://www.helioswei.top/article/2127593710.html</id>
    <published>2020-05-25T02:21:08.000Z</published>
    <updated>2020-06-09T03:52:17.377Z</updated>
    
    <content type="html"><![CDATA[<h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#全局安装</span><br><span class="line">npm install gulp -g</span><br><span class="line">#站点目录安装</span><br><span class="line">npm install gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify --save</span><br></pre></td></tr></table></figure><p>在这里说明一下，使用该工具可以压缩 HTML、CSS、JavaScript 文件，但我并没有压缩 JavaScript 文件，因为有很大的概率会报错，实际也并不需要压缩，因为大部分 JavaScript 都已压缩过。</p><p>如果你也考虑不压缩 JavaScript 文件，可以选择不安装 <code>gulp-uglify</code>。</p><h3 id="gulpfile-js"><a href="#gulpfile-js" class="headerlink" title="gulpfile.js"></a>gulpfile.js</h3><p>在站点文件夹的根目录下，新建一个文件。命名为gulpfile.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require(&apos;gulp&apos;);</span><br><span class="line"></span><br><span class="line">// Plugins 模块获取</span><br><span class="line">var minifycss = require(&apos;gulp-minify-css&apos;);</span><br><span class="line">var uglify = require(&apos;gulp-uglify&apos;);</span><br><span class="line">var htmlmin = require(&apos;gulp-htmlmin&apos;);</span><br><span class="line">var htmlclean = require(&apos;gulp-htmlclean&apos;);</span><br><span class="line"></span><br><span class="line">// 压缩 css</span><br><span class="line">gulp.task(&apos;minify-css&apos;, function () &#123;</span><br><span class="line">return gulp.src(&apos;./public/**/*.css&apos;)</span><br><span class="line">.pipe(minifycss())</span><br><span class="line">.pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 压缩 html</span><br><span class="line">gulp.task(&apos;minify-html&apos;, function () &#123;</span><br><span class="line">return gulp.src(&apos;./public/**/*.html&apos;)</span><br><span class="line">.pipe(htmlclean())</span><br><span class="line">.pipe(htmlmin(&#123;</span><br><span class="line">removeComments: true,</span><br><span class="line">minifyJS: true,</span><br><span class="line">minifyCSS: true,</span><br><span class="line">minifyURLs: true,</span><br><span class="line">&#125;))</span><br><span class="line">.pipe(gulp.dest(&apos;./public&apos;))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 压缩 js 不压缩 min.js</span><br><span class="line">gulp.task(&apos;minify-js&apos;, function () &#123;</span><br><span class="line">return gulp.src([&apos;./public/**/*.js&apos;, &apos;!./public/**/*.min.js&apos;])</span><br><span class="line">.pipe(uglify())</span><br><span class="line">.pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 4.0 以前的写法 </span><br><span class="line">// gulp.task(&apos;default&apos;, [</span><br><span class="line">  //   &apos;minify-html&apos;, &apos;minify-css&apos;, &apos;minify-js&apos;</span><br><span class="line">// ]);</span><br><span class="line"></span><br><span class="line">// 4.0 以后的写法</span><br><span class="line">// 执行 gulp 命令时执行的任务</span><br><span class="line">gulp.task(&apos;default&apos;, gulp.parallel(&apos;minify-html&apos;, &apos;minify-css&apos;, &apos;minify-js&apos;));</span><br></pre></td></tr></table></figure><p><code>如果不压缩 JavaScript 文件，则将上述代码中有关</code>minify-js<code>的代码删除即可</code></p><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[10:24:57] Starting &apos;default&apos;...</span><br><span class="line">[10:24:57] Starting &apos;minify-html&apos;...</span><br><span class="line">[10:24:57] Starting &apos;minify-css&apos;...</span><br><span class="line">[10:24:57] Starting &apos;minify-js&apos;...</span><br><span class="line">[10:25:05] Finished &apos;minify-css&apos; after 8.3 s</span><br><span class="line">[10:25:05] Finished &apos;minify-js&apos; after 8.49 s</span><br><span class="line">[10:25:09] Finished &apos;minify-html&apos; after 12 s</span><br><span class="line">[10:25:09] Finished &apos;default&apos; after 12 s</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;插件安装&quot;&gt;&lt;a href=&quot;#插件安装&quot; class=&quot;headerlink&quot; title=&quot;插件安装&quot;&gt;&lt;/a&gt;插件安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
      <category term="hexo" scheme="http://www.helioswei.top/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.helioswei.top/tags/hexo/"/>
    
      <category term="gulp" scheme="http://www.helioswei.top/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>git-大文件上传管理</title>
    <link href="http://www.helioswei.top/article/3538252460.html"/>
    <id>http://www.helioswei.top/article/3538252460.html</id>
    <published>2020-05-22T08:32:56.000Z</published>
    <updated>2020-06-09T03:52:17.377Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git-lfs安装和配置"><a href="#git-lfs安装和配置" class="headerlink" title="git lfs安装和配置"></a>git lfs安装和配置</h3><p>git lfs 需要客户端支持, 请根据自己的操作系统下载对应的客户端</p><p><a href="https://git-lfs.github.com/" target="_blank" rel="noopener">git lfs客户端下载</a></p><p><code>以Centos7为例，下载客户端后运行rpm安装</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -i git-lfs-2.2.1-1.el7.x86_64.rpm</span><br><span class="line">git lfs install（完成初始化）</span><br></pre></td></tr></table></figure><h3 id="设置管理的文件类型"><a href="#设置管理的文件类型" class="headerlink" title="设置管理的文件类型"></a>设置管理的文件类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#压缩包</span><br><span class="line">git lfs track *.tar *.tar.gz *.tgz *.zip *.7z</span><br><span class="line">#图片</span><br><span class="line">git lfs track *.jpg *.png *.jpeg *.bmp *.gif *.tiff</span><br><span class="line">#库</span><br><span class="line">git lfs track *.jar *.war *.so *.so.*</span><br><span class="line">#非文本文档</span><br><span class="line">git  lfs  track *.doc *.docx *.ppt *.pptx *.pdf *.xls *.xlsx</span><br><span class="line">#安装包</span><br><span class="line">git  lfs  track *.rpm *.deb *.img *.iso</span><br></pre></td></tr></table></figure><p><code>设置完之后会在项目根目录下出现.gitattributes文件</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;git-lfs安装和配置&quot;&gt;&lt;a href=&quot;#git-lfs安装和配置&quot; class=&quot;headerlink&quot; title=&quot;git lfs安装和配置&quot;&gt;&lt;/a&gt;git lfs安装和配置&lt;/h3&gt;&lt;p&gt;git lfs 需要客户端支持, 请根据自己的操作系统下载对
      
    
    </summary>
    
      <category term="git" scheme="http://www.helioswei.top/categories/git/"/>
    
    
      <category term="git" scheme="http://www.helioswei.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>hexo-next主题配置</title>
    <link href="http://www.helioswei.top/article/1968653668.html"/>
    <id>http://www.helioswei.top/article/1968653668.html</id>
    <published>2020-05-07T08:46:52.000Z</published>
    <updated>2020-06-09T03:52:17.378Z</updated>
    
    <content type="html"><![CDATA[<p>主要记录一下自己在搭建个人博客的时候，一些配置，基本上是查阅别人的文章，这里记录一下</p><h3 id="一，hexo安装"><a href="#一，hexo安装" class="headerlink" title="一，hexo安装"></a>一，hexo安装</h3><p><a href="https://www.jianshu.com/p/eded1dd2d794" target="_blank" rel="noopener">hexo安装</a></p><p><a href="https://www.jianshu.com/p/b20fc983005f" target="_blank" rel="noopener">next主题设置</a></p><h3 id="二，添加LocalSearch搜索"><a href="#二，添加LocalSearch搜索" class="headerlink" title="二，添加LocalSearch搜索"></a>二，添加LocalSearch搜索</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> npm install hexo-generator-searchdb --save</span><br><span class="line"> </span><br><span class="line"> 编辑主题配置文件，启用本地搜素</span><br><span class="line"> # Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h3 id="三，网站访问量统计"><a href="#三，网站访问量统计" class="headerlink" title="三，网站访问量统计"></a>三，网站访问量统计</h3><p><img src="/images/blog/baidu.png" alt="baidu.png"></p><h3 id="四，阅读次数统计"><a href="#四，阅读次数统计" class="headerlink" title="四，阅读次数统计"></a>四，阅读次数统计</h3><p><a href="https://www.cnblogs.com/lijianming180/p/12433189.html" target="_blank" rel="noopener">LeanCloud添加阅读次数</a></p><h3 id="五，添加评论"><a href="#五，添加评论" class="headerlink" title="五，添加评论"></a>五，添加评论</h3><p><a href="https://blog.csdn.net/jiunian_2761/article/details/97388997" target="_blank" rel="noopener">valine</a></p><h3 id="六，域名申请"><a href="#六，域名申请" class="headerlink" title="六，域名申请"></a>六，域名申请</h3><p><a href="https://blog.csdn.net/linshuhe1/article/details/73013730" target="_blank" rel="noopener">域名申请</a></p><h3 id="七，谷歌检索"><a href="#七，谷歌检索" class="headerlink" title="七，谷歌检索"></a>七，谷歌检索</h3><p><a href="https://www.itrhx.com/2019/09/17/A48-submit-search-engine-inclusion/" target="_blank" rel="noopener">谷歌检索</a></p><h3 id="八，永久文章链接"><a href="#八，永久文章链接" class="headerlink" title="八，永久文章链接"></a>八，永久文章链接</h3><p><a href="https://www.jianshu.com/p/c7de2ae59975" target="_blank" rel="noopener">abbrlink</a></p><h3 id="九，404"><a href="#九，404" class="headerlink" title="九，404"></a>九，404</h3><p><a href="https://www.jianshu.com/p/2349c763cc02" target="_blank" rel="noopener">404错误</a></p><h3 id="十，码云-GitHub部署"><a href="#十，码云-GitHub部署" class="headerlink" title="十，码云+GitHub部署"></a>十，码云+GitHub部署</h3><p><img src="/images/blog/gitee.png" alt="gitee.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">需要在站点配置文件中配置gitee和GitHub的仓库地址</span><br><span class="line">然后就可以部署了，不过我们在gitee上部署后，每次都需要手动的去更新gitee page，才能生效</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;主要记录一下自己在搭建个人博客的时候，一些配置，基本上是查阅别人的文章，这里记录一下&lt;/p&gt;
&lt;h3 id=&quot;一，hexo安装&quot;&gt;&lt;a href=&quot;#一，hexo安装&quot; class=&quot;headerlink&quot; title=&quot;一，hexo安装&quot;&gt;&lt;/a&gt;一，hexo安装&lt;/h3
      
    
    </summary>
    
      <category term="hexo" scheme="http://www.helioswei.top/categories/hexo/"/>
    
    
      <category term="next" scheme="http://www.helioswei.top/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>cuda-cuda10.0安装</title>
    <link href="http://www.helioswei.top/article/2055195890.html"/>
    <id>http://www.helioswei.top/article/2055195890.html</id>
    <published>2020-05-07T02:48:26.000Z</published>
    <updated>2020-06-09T03:52:17.376Z</updated>
    
    <content type="html"><![CDATA[<p>​        在转码的过程中，我们可以使用硬件来进行转码的加速，今天记录一下在Centos7环境下安装驱动以及cuda模块。</p><h3 id="下载驱动"><a href="#下载驱动" class="headerlink" title="下载驱动"></a>下载驱动</h3><p><code>如果打算安装CUDA10.0及以上的版本则不需要单独安装驱动，cuda10.0自带驱动驱动</code><strong>忽略该驱动的安装</strong></p><p><a href="https://www.nvidia.cn/Download/Find.aspx?lang=cn&amp;QNF=1" target="_blank" rel="noopener">驱动下载地址</a></p><p>例如我们下载Quadro P2000 linux64的驱动</p><p><img src="/images/cuda/图片1.png" alt="图片1.png"></p><p><img src="/images/cuda/图片2.png" alt="图片2.png"></p><p>之所以安装这个驱动是因为要安装的cuda10.0也是410的，之后运行安装驱动程序就好了。</p><h3 id="安装cuda10-0"><a href="#安装cuda10-0" class="headerlink" title="安装cuda10.0"></a>安装cuda10.0</h3><h5 id="1，下载安装包"><a href="#1，下载安装包" class="headerlink" title="1，下载安装包"></a>1，下载安装包</h5><p>​    <a href="https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;target_distro=CentOS&amp;target_version=7&amp;target_type=runfilelocal" target="_blank" rel="noopener">安装包下载</a>    在该网站上下载安装包</p><p><img src="/images/cuda/图片3.png" alt="图片3.png"></p><h5 id="2，版本选择"><a href="#2，版本选择" class="headerlink" title="2，版本选择"></a>2，版本选择</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过以下按钮选择历史版本的cuda，找到10.0下载，然后选择对应的系统</span><br></pre></td></tr></table></figure><p><img src="/images/cuda/图片4.png" alt="图片4.png"></p><h5 id="3，运行-run文件"><a href="#3，运行-run文件" class="headerlink" title="3，运行.run文件"></a>3，运行.run文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">下载完安装包放在linux上直接运行.run文件</span><br><span class="line"></span><br><span class="line">chmod +x cuda_10.0.130_410.48_linux.run </span><br><span class="line">./cuda_10.0.130_410.48_linux.run</span><br></pre></td></tr></table></figure><h5 id="4，然后一直按回车键直到："><a href="#4，然后一直按回车键直到：" class="headerlink" title="4，然后一直按回车键直到："></a>4，然后一直按回车键直到：</h5><p><img src="/images/cuda/图片5.png" alt="图片5.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">回答：accept</span><br></pre></td></tr></table></figure><h5 id="5，是否安装驱动"><a href="#5，是否安装驱动" class="headerlink" title="5，是否安装驱动"></a>5，是否安装驱动</h5><p><img src="/images/cuda/图片6.png" alt="图片6.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">是否安装驱动，这里选择安装：y,因为我们自己没有提前安装驱动，如果提前安装过驱动，这里就不选择安装：n</span><br></pre></td></tr></table></figure><h5 id="6，是否安装OpenGL"><a href="#6，是否安装OpenGL" class="headerlink" title="6，是否安装OpenGL"></a>6，是否安装OpenGL</h5><p><img src="/images/cuda/图片7.png" alt="图片7.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择;n</span><br></pre></td></tr></table></figure><h5 id="7，是否安装x-config"><a href="#7，是否安装x-config" class="headerlink" title="7，是否安装x-config"></a>7，是否安装x-config</h5><p><img src="/images/cuda/图片8.png" alt="图片8.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择：n</span><br></pre></td></tr></table></figure><h5 id="8，是否安装Toolkit"><a href="#8，是否安装Toolkit" class="headerlink" title="8，是否安装Toolkit"></a>8，是否安装Toolkit</h5><p><img src="/images/cuda/图片10.png" alt="图片10.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择：y</span><br></pre></td></tr></table></figure><h5 id="9，cuda目录"><a href="#9，cuda目录" class="headerlink" title="9，cuda目录"></a>9，cuda目录</h5><p><img src="/images/cuda/图片11.png" alt="图片11.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">直接回车，选择默认安装路径</span><br></pre></td></tr></table></figure><h5 id="10，是否创建软连接"><a href="#10，是否创建软连接" class="headerlink" title="10，是否创建软连接"></a>10，是否创建软连接</h5><p><img src="/images/cuda/图片12.png" alt="图片12.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择：y</span><br></pre></td></tr></table></figure><h5 id="11，是否安装示例"><a href="#11，是否安装示例" class="headerlink" title="11，是否安装示例"></a>11，是否安装示例</h5><p><img src="/images/cuda/图片13.png" alt="图片13.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">为了节约空间，这个不安装</span><br><span class="line">选择：n</span><br></pre></td></tr></table></figure><h5 id="12，然后开始安装"><a href="#12，然后开始安装" class="headerlink" title="12，然后开始安装"></a>12，然后开始安装</h5><p><img src="/images/cuda/图片14.png" alt="图片14.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">表示安装成功</span><br></pre></td></tr></table></figure><h5 id="13，添加配置文件"><a href="#13，添加配置文件" class="headerlink" title="13，添加配置文件"></a>13，添加配置文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim  /etc/profile</span><br><span class="line">写入：</span><br><span class="line">export PATH=/usr/local/cuda-10.0/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH</span><br><span class="line">保存：</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h5 id="14，卸载驱动及cuda"><a href="#14，卸载驱动及cuda" class="headerlink" title="14，卸载驱动及cuda"></a>14，卸载驱动及cuda</h5><p><img src="/images/cuda/图片15.png" alt="图片15.png"></p><font color="red"><strong>注意</strong></font><p><code>1,千万不要重复安装显卡驱动，会导致系统损坏</code></p><p><code>2.升级cuda的时候，一定要将旧版本的cuda卸载干净，否则会出现意想不到的错误</code></p><h5 id="15，查看命令"><a href="#15，查看命令" class="headerlink" title="15，查看命令"></a>15，查看命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1，检查显卡类型</span><br><span class="line">yum install pciutils（如果没有这个命令，则下载）</span><br><span class="line">lspci | grep VGA</span><br></pre></td></tr></table></figure><p><img src="/images/cuda/图片17.png" alt="图片17.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2，检查安装是否成功</span><br><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><p><img src="/images/cuda/图片16.png" alt="图片16.png"></p><h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><h5 id="1，-usr-bin-perl-bad-interpreter-No-such-file-or-directory"><a href="#1，-usr-bin-perl-bad-interpreter-No-such-file-or-directory" class="headerlink" title="1， /usr/bin/perl: bad interpreter: No such file or directory"></a>1， /usr/bin/perl: bad interpreter: No such file or directory</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc</span><br><span class="line">yum install perl</span><br></pre></td></tr></table></figure><h5 id="2，kernel源安装"><a href="#2，kernel源安装" class="headerlink" title="2，kernel源安装"></a>2，kernel源安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">检查系统版本</span><br><span class="line">uname -a</span><br><span class="line">yum install kernel-devel-$(uname -r) kernel-headers-$(uname -r)</span><br><span class="line">先查看源是否相同，如果没有则需要下载</span><br></pre></td></tr></table></figure><h5 id="3，禁用nouveau（对某些版本需要）"><a href="#3，禁用nouveau（对某些版本需要）" class="headerlink" title="3，禁用nouveau（对某些版本需要）"></a>3，禁用nouveau（对某些版本需要）</h5><h6 id="1，修改文件"><a href="#1，修改文件" class="headerlink" title="1，修改文件"></a>1，修改文件</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1，修改文件</span><br><span class="line">cd /etc/modprobe.d</span><br><span class="line">vim nvidia-installer-disable-nouveau.conf（如果没有这个文件，则手动生成）</span><br><span class="line"> </span><br><span class="line"> 内容：</span><br><span class="line"> # generated by nvidia-installer</span><br><span class="line"> blacklist nouveau</span><br><span class="line"> options nouveau modeset=0</span><br></pre></td></tr></table></figure><h6 id="2，备份-initramfs"><a href="#2，备份-initramfs" class="headerlink" title="2，备份 initramfs"></a>2，备份 initramfs</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r).img.bak</span><br></pre></td></tr></table></figure><h6 id="3，重建-initramfs"><a href="#3，重建-initramfs" class="headerlink" title="3，重建 initramfs"></a>3，重建 initramfs</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dracut -v /boot/initramfs-$(uname -r).img $(uname -r)</span><br></pre></td></tr></table></figure><h6 id="4，重启机器"><a href="#4，重启机器" class="headerlink" title="4，重启机器"></a>4，重启机器</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h6 id="5，检查nouveau-driver确保没有被加载"><a href="#5，检查nouveau-driver确保没有被加载" class="headerlink" title="5，检查nouveau driver确保没有被加载"></a>5，检查nouveau driver确保没有被加载</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep nouveau</span><br><span class="line">没有加载则为空，有加载则如图，说明设置没有生效，需要重新设置</span><br></pre></td></tr></table></figure><p><img src="/images/cuda/nouveau.png" alt="nouveau.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​        在转码的过程中，我们可以使用硬件来进行转码的加速，今天记录一下在Centos7环境下安装驱动以及cuda模块。&lt;/p&gt;
&lt;h3 id=&quot;下载驱动&quot;&gt;&lt;a href=&quot;#下载驱动&quot; class=&quot;headerlink&quot; title=&quot;下载驱动&quot;&gt;&lt;/a&gt;下载
      
    
    </summary>
    
      <category term="cuda" scheme="http://www.helioswei.top/categories/cuda/"/>
    
    
      <category term="nvidia" scheme="http://www.helioswei.top/tags/nvidia/"/>
    
      <category term="驱动" scheme="http://www.helioswei.top/tags/%E9%A9%B1%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>centos7-常用的命令</title>
    <link href="http://www.helioswei.top/article/2689943165.html"/>
    <id>http://www.helioswei.top/article/2689943165.html</id>
    <published>2020-05-06T06:52:04.000Z</published>
    <updated>2020-07-13T02:53:33.568Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下自己常用的centos7上的命令行</p><h3 id="mount挂载"><a href="#mount挂载" class="headerlink" title="mount挂载"></a>mount挂载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">虚拟机和主机共享目录</span><br><span class="line">mount -t cifs //192.168.30.97/code /mnt -o username=Administrator,password=Helios</span><br><span class="line"></span><br><span class="line">/code 是主机上的目录，需要设置为共享的</span><br><span class="line">username 为主机的用户名</span><br><span class="line">password 是主机的密码</span><br><span class="line">/mnt 是虚拟机上的目录</span><br><span class="line"></span><br><span class="line">卸载：</span><br><span class="line">umount /mnt</span><br><span class="line">卸载失败可以重启服务器</span><br></pre></td></tr></table></figure><h3 id="nohup常驻服务"><a href="#nohup常驻服务" class="headerlink" title="nohup常驻服务"></a>nohup常驻服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">linux平台上，要在后台运行脚本的话，一般是在命令之后加上&amp;即可。</span><br><span class="line">常驻服务的运行，退出终端也可以的命令行</span><br><span class="line">nohup</span><br><span class="line">具体方法</span><br><span class="line">nohup ./videotool &amp;</span><br></pre></td></tr></table></figure><h3 id="查看系统的状态的命令"><a href="#查看系统的状态的命令" class="headerlink" title="查看系统的状态的命令"></a>查看系统的状态的命令</h3><h5 id="查看内存"><a href="#查看内存" class="headerlink" title="查看内存"></a>查看内存</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -h</span><br></pre></td></tr></table></figure><h5 id="查看磁盘使用"><a href="#查看磁盘使用" class="headerlink" title="查看磁盘使用"></a>查看磁盘使用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><h5 id="查看文件大小"><a href="#查看文件大小" class="headerlink" title="查看文件大小"></a>查看文件大小</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sh 11.mkv</span><br></pre></td></tr></table></figure><h5 id="查看进程的线程数"><a href="#查看进程的线程数" class="headerlink" title="查看进程的线程数"></a>查看进程的线程数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -T -p pid</span><br></pre></td></tr></table></figure><h5 id="查看centos7的物理核数"><a href="#查看centos7的物理核数" class="headerlink" title="查看centos7的物理核数"></a>查看centos7的物理核数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo| grep &quot;physical id&quot;| sort| uniq| wc -l</span><br></pre></td></tr></table></figure><h5 id="查看centos7的逻辑核数"><a href="#查看centos7的逻辑核数" class="headerlink" title="查看centos7的逻辑核数"></a>查看centos7的逻辑核数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo| grep &quot;processor&quot;| wc -l</span><br></pre></td></tr></table></figure><h3 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp  -rfd   ./oldname  ./newname</span><br><span class="line">-r 复制目录</span><br><span class="line">-f 强制复制</span><br><span class="line">-d 复制软连接</span><br><span class="line"></span><br><span class="line">忽略冲突复制</span><br><span class="line">\cp  -rfd   ./oldname  ./newname</span><br></pre></td></tr></table></figure><h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">基本格式：</span><br><span class="line">* * * * * command  </span><br><span class="line">含义：</span><br><span class="line">分 时 天 月 周  </span><br><span class="line">使用*/n 表示此字段上每隔n执行一次，同时注意如果低时间使用了，会覆盖高时间的*/n,不要同时使用某一天与一周的某一天，如果这个两个相等，则会执行两次</span><br></pre></td></tr></table></figure><h5 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><h5 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -r  这个表示删除所有的定时任务，如果需要删除单个，则使用crontab -e 进行编辑，然后删除某一行</span><br></pre></td></tr></table></figure><h3 id="获取服务运行时使用的内存"><a href="#获取服务运行时使用的内存" class="headerlink" title="获取服务运行时使用的内存"></a>获取服务运行时使用的内存</h3><p><img src="/images/linux/cache.png" alt="cache.png"></p><h3 id="控制进程使用cpu数目"><a href="#控制进程使用cpu数目" class="headerlink" title="控制进程使用cpu数目"></a>控制进程使用cpu数目</h3><h5 id="获取进程id"><a href="#获取进程id" class="headerlink" title="获取进程id"></a>获取进程id</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pgrep  -f   servername</span><br><span class="line"></span><br><span class="line">pidof   servername</span><br></pre></td></tr></table></figure><h5 id="设置CPU使用"><a href="#设置CPU使用" class="headerlink" title="设置CPU使用"></a>设置CPU使用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意： 默认情况下，taskset不会影响进程的所有线程（LWP）。使用任务集的“-a”选项来影响流程中的所有线程</span><br><span class="line"></span><br><span class="line">一般可以这样设置：   taskset   -apc  0   8991     (这个目前最有效）</span><br></pre></td></tr></table></figure><h3 id="脚本中生成随机数"><a href="#脚本中生成随机数" class="headerlink" title="脚本中生成随机数"></a>脚本中生成随机数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UUID=`echo $RANDOM`</span><br></pre></td></tr></table></figure><h3 id="记录程序运行的资源到文件中"><a href="#记录程序运行的资源到文件中" class="headerlink" title="记录程序运行的资源到文件中"></a>记录程序运行的资源到文件中</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y time</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/time -v -o video.log ffmpeg -i xxx.mp4</span><br></pre></td></tr></table></figure><h3 id="查看机器是物理机还是虚拟机"><a href="#查看机器是物理机还是虚拟机" class="headerlink" title="查看机器是物理机还是虚拟机"></a>查看机器是物理机还是虚拟机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmidecode -s system-product-name</span><br></pre></td></tr></table></figure><p>结果如图：</p><p><img src="/images/linux/syss.png" alt="syss.png"></p><p><img src="/images/linux/sysv.png" alt="sysv.png"></p><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><h5 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h5><p>搜索文件中包含某个单词</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -rn  weiyang *</span><br></pre></td></tr></table></figure><h5 id="过滤本身"><a href="#过滤本身" class="headerlink" title="过滤本身"></a>过滤本身</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep vim |grep -v grep</span><br></pre></td></tr></table></figure><p>##### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录一下自己常用的centos7上的命令行&lt;/p&gt;
&lt;h3 id=&quot;mount挂载&quot;&gt;&lt;a href=&quot;#mount挂载&quot; class=&quot;headerlink&quot; title=&quot;mount挂载&quot;&gt;&lt;/a&gt;mount挂载&lt;/h3&gt;&lt;figure class=&quot;highlight
      
    
    </summary>
    
      <category term="centos7" scheme="http://www.helioswei.top/categories/centos7/"/>
    
    
      <category term="centos7" scheme="http://www.helioswei.top/tags/centos7/"/>
    
  </entry>
  
  <entry>
    <title>centos7-epel源下载</title>
    <link href="http://www.helioswei.top/article/3859923575.html"/>
    <id>http://www.helioswei.top/article/3859923575.html</id>
    <published>2020-05-06T03:20:01.000Z</published>
    <updated>2020-06-09T03:52:17.375Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一，什么是epel"><a href="#一，什么是epel" class="headerlink" title="一，什么是epel"></a>一，什么是epel</h3><p><strong>EPEL的全称叫 Extra Packages for Enterprise Linux</strong> 。EPEL是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。装上了 EPEL之后，就相当于添加了一个第三方源。</p><p>如果你知道rpmfusion.org的话，拿 rpmfusion 做比较还是很恰当的，rpmfusion 主要为桌面发行版提供大量rpm包，而<strong><em>EPEL则为服务器版本提供大量的rpm包，而且大多数rpm包在官方 repository 中是找不到的\</em></strong></p><p>另外一个特点是<strong>绝大多数rpm包要比官方repository 的rpm包版本要来得新</strong>。所以，我们有时候在yum下载的时候如果没有找到某个包或者版本过低，可以使用这个方式来尝试。</p><h3 id="二，yum下载"><a href="#二，yum下载" class="headerlink" title="二，yum下载"></a>二，yum下载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一，什么是epel&quot;&gt;&lt;a href=&quot;#一，什么是epel&quot; class=&quot;headerlink&quot; title=&quot;一，什么是epel&quot;&gt;&lt;/a&gt;一，什么是epel&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;EPEL的全称叫 Extra Packages for Enterp
      
    
    </summary>
    
      <category term="centos7" scheme="http://www.helioswei.top/categories/centos7/"/>
    
    
      <category term="yum" scheme="http://www.helioswei.top/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>centos7-163yum源下载</title>
    <link href="http://www.helioswei.top/article/2361785990.html"/>
    <id>http://www.helioswei.top/article/2361785990.html</id>
    <published>2020-05-06T03:14:01.000Z</published>
    <updated>2020-06-09T03:52:17.375Z</updated>
    
    <content type="html"><![CDATA[<p>我们在centos7上下载东西的时候，有时候自带的源里面没有我们需要的软件，所有我们需要更换源来进行下载</p><h3 id="一，下载repo文件"><a href="#一，下载repo文件" class="headerlink" title="一，下载repo文件"></a>一，下载repo文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.163.com/.help/CentOS7-Base-163.repo</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o CentOS7-Base-163.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</span><br></pre></td></tr></table></figure><h3 id="二，备份并且替代系统的repo文件"><a href="#二，备份并且替代系统的repo文件" class="headerlink" title="二，备份并且替代系统的repo文件"></a>二，备份并且替代系统的repo文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp  CentOS7-Base-163.repo  /etc/yum.repos.d/ </span><br><span class="line"></span><br><span class="line">cd /etc/yum.repos.d/ </span><br><span class="line"></span><br><span class="line">mv CentOS-Base.repo CentOS-Base.repo.bak </span><br><span class="line"></span><br><span class="line">mv CentOS7-Base-163.repo CentOS-Base.repo</span><br></pre></td></tr></table></figure><h3 id="三，执行yum源更新命令"><a href="#三，执行yum源更新命令" class="headerlink" title="三，执行yum源更新命令"></a>三，执行yum源更新命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum clean all </span><br><span class="line"></span><br><span class="line">yum makecache </span><br><span class="line"></span><br><span class="line">yum update</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我们在centos7上下载东西的时候，有时候自带的源里面没有我们需要的软件，所有我们需要更换源来进行下载&lt;/p&gt;
&lt;h3 id=&quot;一，下载repo文件&quot;&gt;&lt;a href=&quot;#一，下载repo文件&quot; class=&quot;headerlink&quot; title=&quot;一，下载repo文件&quot;&gt;
      
    
    </summary>
    
      <category term="centos7" scheme="http://www.helioswei.top/categories/centos7/"/>
    
    
      <category term="yum" scheme="http://www.helioswei.top/tags/yum/"/>
    
  </entry>
  
</feed>
